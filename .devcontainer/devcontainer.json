// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/typescript-node
{
  "name": "Rinha backend",
  "dockerComposeFile": [
    "../docker-compose.yml",
    "docker-compose.devcontainer.yml"
  ],
  "service": "devcontainer",
  "shutdownAction": "stopCompose",
  "workspaceFolder": "/workspace",
  "privileged": true,
  // "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  // "image": "mcr.microsoft.com/devcontainers/typescript-node:1-20-bullseye",
  // "image": "mcr.microsoft.com/devcontainers/dotnet:0-7.0",
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true,
      "installOhMyZsh": true,
      "installOhMyZshConfig": true,
      "upgradePackages": true,
      "username": "automatic",
      "userUid": "automatic",
      "userGid": "automatic"
    },
    "ghcr.io/devcontainers-contrib/features/zsh-plugins:0": {
      "plugins": "ssh-agent npm",
      "omzPlugins": "https://github.com/zsh-users/zsh-autosuggestions",
      "username": "root"
    },
    "ghcr.io/stuartleeks/dev-container-features/shell-history:0": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "moby": true,
      "installDockerBuildx": true,
      "version": "latest",
      "dockerDashComposeVersion": "v2"
    }
    // "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
    //   "moby": true,
    //   "installDockerBuildx": true,
    //   "version": "latest",
    //   "dockerDashComposeVersion": "v2"
    // }
  },
  // Features to add to the dev container. More info: https://containers.dev/features.
  // "features": {},
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],
  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "yarn install",
  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "explorer.autoReveal": false,
        "scm.defaultViewMode": "tree",
        "dev.containers.mountWaylandSocket": false,
        "security.workspace.trust.enabled": true,
        "security.workspace.trust.untrustedFiles": "open",
        "editor.formatOnSave": true,
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[csharp]": {
          "editor.defaultFormatter": "csharpier.csharpier-vscode"
        }
      },
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "ms-vsliveshare.vsliveshare",
        "EditorConfig.EditorConfig",
        "ms-vscode.remote-repositories",
        "github.remotehub",
        "github.vscode-pull-request-github",
        "eamodio.gitlens",
        "visualstudioexptteam.vscodeintellicode",
        "visualstudioexptteam.vscodeintellicode-completions",
        "ms-dotnettools.vscode-dotnet-runtime",
        "ms-dotnettools.csharp",
        "ms-dotnettools.vscodeintellicode-csharp",
        "csharpier.csharpier-vscode",
        "ms-azuretools.vscode-docker",
        "ms-vscode-remote.remote-wsl",
        "ms-dotnettools.csdevkit",
        "davidanson.vscode-markdownlint",
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "humao.rest-client"
      ]
    }
  },
  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  "remoteUser": "vscode"
}
